---
kind: ConfigMap
apiVersion: v1 
metadata:
  name: redash-cfg
  namespace: {{ .Values.namespace }}
data:
  PYTHONUNBUFFERED: "0"
  REDASH_LOG_LEVEL: "INFO"
  POSTGRES_PASSWORD: "insecure"
  REDASH_DATABASE_URL: "postgresql://postgres:insecure@localhost/postgres"

---
apiVersion: v1
kind: Service
metadata:
  name: redash
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.server.port }}
      targetPort: redash
      name: redash
  selector:
    app: redash

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redash
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: redash
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redash
    spec:
      volumes:
      - name: postgres-for-redash
        persistentVolumeClaim:
          claimName: pgredash-pv-claim
      dnsPolicy: {{ .Values.dnsPolicy }}
      containers:
      - name: redis
        image: redis:5.0-alpine
        ports:
        - containerPort: 6379
      - name:  postgres
        image: postgres:9.5-alpine
        envFrom:
        - configMapRef:
            name: redash-cfg
        volumeMounts:
        - name: postgres-for-redash
          mountPath: /var/lib/postgresql/data
          subPath: postgres
      - name: server
        image: {{ .Values.image }}
        envFrom:
        - configMapRef:
            name: redash-cfg
        env:
        - name: REDASH_WEB_WORKERS
          value: "4"
        args: ["server"]
        lifecycle:
          postStart:
            exec:
              command: [ "/bin/sh", "-c", "/app/bin/docker-entrypoint create_db" ]
        ports:
        - containerPort: {{ .Values.server.port }}
          name: redash
      - name: scheduler
        image: {{ .Values.image }}
        envFrom:
        - configMapRef:
            name: redash-cfg
        env:
        - name: QUEUES
          value: "celery"
        - name: WORKERS_COUNT
          value: "1"
        args: ["scheduler"]
      - name: scheduled-worker
        image: {{ .Values.image }}
        envFrom:
        - configMapRef:
            name: redash-cfg
        env:
        - name: QUEUES
          value: "scheduled_queries,schemas"
        - name: WORKERS_COUNT
          value: "1"
        args: ["worker"]
      - name: adhoc-worker
        image: {{ .Values.image }}
        envFrom:
        - configMapRef:
            name: redash-cfg
        env:
        - name: QUEUES
          value: "queries"
        - name: WORKERS_COUNT
          value: "2"
        args: ["worker"]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgredash-pv-claim
  namespace: {{ .Values.namespace }}
spec:
  storageClassName: {{ .Values.storage.storageClass }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.storage.size }}Gi

